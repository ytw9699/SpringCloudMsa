server.port =8000
eureka.client.register-with-eureka = true
eureka.client.fetch-registry = true
eureka.client.service-url.defaultZone = http://localhost:8762/eureka
spring.application.name = apigateway-service
token.secret = dfmlejkfjdjdddf1241524ghdas

management.endpoints.web.exposure.include=refresh, health, beans, httptrace

spring.cloud.gateway.default-filters[0].name = GlobalFilter
spring.cloud.gateway.default-filters[0].args.baseMessage= Global Filter output 
spring.cloud.gateway.default-filters[0].args.preLogger=true
spring.cloud.gateway.default-filters[0].args.postLogger=true

spring.cloud.gateway.routes[0].id = first-service
#spring.cloud.gateway.routes[0].uri = http://localhost:8081/
spring.cloud.gateway.routes[0].uri = lb://FIRST-SERVICE
spring.cloud.gateway.routes[0].predicates[0] = Path=/first-service/**
spring.cloud.gateway.routes[0].filters[0].name = CustomFilter
#spring.cloud.gateway.routes[0].filters[0] = AddRequestHeader=first-request, first-requests-first
#spring.cloud.gateway.routes[0].filters[1] = AddResponseHeader=first-response, first-response-header
spring.cloud.gateway.routes[0].filters[1].name = LoggingFilter
spring.cloud.gateway.routes[0].filters[1].args.baseMessage= Logging Filter output
spring.cloud.gateway.routes[0].filters[1].args.preLogger=true
spring.cloud.gateway.routes[0].filters[1].args.postLogger=true

spring.cloud.gateway.routes[1].id = second-service
spring.cloud.gateway.routes[1].uri = lb://SECOND-SERVICE
#spring.cloud.gateway.routes[1].uri = http://localhost:8082/
spring.cloud.gateway.routes[1].predicates[0] = Path=/second-service/**
spring.cloud.gateway.routes[1].filters[0].name = CustomFilter
#spring.cloud.gateway.routes[1].filters[0] = AddRequestHeader=second-request, second-requests-second
#spring.cloud.gateway.routes[1].filters[1] = AddResponseHeader=second-response, second-response-header

#spring.cloud.gateway.routes[2].id = user-service2
#spring.cloud.gateway.routes[2].uri = lb://USER-SERVICE2
#spring.cloud.gateway.routes[2].predicates[0] = Path=/user-service2/**
#spring.cloud.gateway.routes[2].filters[0]=RewritePath=/user-service2/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[2].id = user-service2
spring.cloud.gateway.routes[2].uri = lb://USER-SERVICE2
spring.cloud.gateway.routes[2].predicates[0] = Path=/user-service2/login
spring.cloud.gateway.routes[2].predicates[1] = Method=POST
spring.cloud.gateway.routes[2].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[2].filters[1]=RewritePath=/user-service2/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[3].id = user-service2
spring.cloud.gateway.routes[3].uri = lb://USER-SERVICE2
spring.cloud.gateway.routes[3].predicates[0] = Path=/user-service2/users
spring.cloud.gateway.routes[3].predicates[1] = Method=POST
spring.cloud.gateway.routes[3].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[3].filters[1]=RewritePath=/user-service2/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[4].id = user-service2
spring.cloud.gateway.routes[4].uri = lb://USER-SERVICE2
spring.cloud.gateway.routes[4].predicates[0] = Path=/user-service2/**
spring.cloud.gateway.routes[4].predicates[1] = Method=GET
spring.cloud.gateway.routes[4].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[4].filters[1]=RewritePath=/user-service2/(?<segment>.*), /$\{segment}
spring.cloud.gateway.routes[4].filters[2].name=AuthorizationHeaderFilter

spring.cloud.gateway.routes[5].id = user-service2
spring.cloud.gateway.routes[5].uri = lb://USER-SERVICE2
spring.cloud.gateway.routes[5].predicates[0] = Path=/user-service2/actuator/**
spring.cloud.gateway.routes[5].predicates[1] = Method=GET,POST
spring.cloud.gateway.routes[5].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[5].filters[1]=RewritePath=/user-service2/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[6].id = catalog-service
spring.cloud.gateway.routes[6].uri = lb://CATALOG-SERVICE
spring.cloud.gateway.routes[6].predicates[0] = Path=/catalog-service/**
spring.cloud.gateway.routes[6].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[6].filters[1]=RewritePath=/catalog-service/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[7].id = order-service
spring.cloud.gateway.routes[7].uri = lb://ORDER-SERVICE
spring.cloud.gateway.routes[7].predicates[0] = Path=/order-service/**
spring.cloud.gateway.routes[7].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[7].filters[1]=RewritePath=/order-service/(?<segment>.*), /$\{segment}


