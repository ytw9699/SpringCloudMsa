server.port =8000
eureka.client.register-with-eureka = true
eureka.client.fetch-registry = true
eureka.client.service-url.defaultZone = http://localhost:8762/eureka
spring.application.name = apigateway-service

spring.cloud.gateway.default-filters[0].name = GlobalFilter
spring.cloud.gateway.default-filters[0].args.baseMessage= Global Filter output 
spring.cloud.gateway.default-filters[0].args.preLogger=true
spring.cloud.gateway.default-filters[0].args.postLogger=true
spring.cloud.gateway.routes[0].id = first-service
#spring.cloud.gateway.routes[0].uri = http://localhost:8081/
spring.cloud.gateway.routes[0].uri = lb://FIRST-SERVICE
spring.cloud.gateway.routes[0].predicates[0] = Path=/first-service/**
spring.cloud.gateway.routes[0].filters[0].name = CustomFilter
#spring.cloud.gateway.routes[0].filters[0] = AddRequestHeader=first-request, first-requests-first
#spring.cloud.gateway.routes[0].filters[1] = AddResponseHeader=first-response, first-response-header
spring.cloud.gateway.routes[0].filters[1].name = LoggingFilter
spring.cloud.gateway.routes[0].filters[1].args.baseMessage= Logging Filter output
spring.cloud.gateway.routes[0].filters[1].args.preLogger=true
spring.cloud.gateway.routes[0].filters[1].args.postLogger=true

spring.cloud.gateway.routes[1].id = second-service
spring.cloud.gateway.routes[1].uri = lb://SECOND-SERVICE
#spring.cloud.gateway.routes[1].uri = http://localhost:8082/
spring.cloud.gateway.routes[1].predicates[0] = Path=/second-service/**
spring.cloud.gateway.routes[1].filters[0].name = CustomFilter
#spring.cloud.gateway.routes[1].filters[0] = AddRequestHeader=second-request, second-requests-second
#spring.cloud.gateway.routes[1].filters[1] = AddResponseHeader=second-response, second-response-header

